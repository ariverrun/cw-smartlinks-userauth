services:
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - default
      - cw-smartlinks-userauth-network

  php:
    container_name: cw-smartlinks-userauth-php
    build:
      context: './../'
      dockerfile: 'docker/php/Dockerfile'
      args:
        PHP_VERSION: ${PHP_VERSION}
        USER_ID: "${USER_ID}"
        GROUP_ID: "${GROUP_ID}"
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-16}&charset=utf8"
    volumes:
      - ..:/var/www/html/
    depends_on:
      - database
    healthcheck:
      test: ["CMD", "php", "-v"]
      timeout: 5s
      retries: 3
    networks:
      - default
      - cw-smartlinks-userauth-network

  nginx:
    image: nginx:1.25
    volumes:
      - ../docker/nginx/conf.d:/etc/nginx/conf.d
      - ..:/var/www/html/
    depends_on:
      - php
    networks:
      - default
      - cw-smartlinks-userauth-network

volumes:
  database_data:

networks:
  cw-smartlinks-userauth-network:
    external: true
